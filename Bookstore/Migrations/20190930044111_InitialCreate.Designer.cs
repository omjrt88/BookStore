// <auto-generated />
using System;
using Bookstore.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bookstore.Migrations
{
    [DbContext(typeof(BookStoreContext))]
    [Migration("20190930044111_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bookstore.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthday");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1965, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "J. K. Rowling"
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1892, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "J. R. R. Tolkien"
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(1969, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jojo Moyes"
                        },
                        new
                        {
                            Id = 4,
                            Birthday = new DateTime(1947, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Stephen King"
                        },
                        new
                        {
                            Id = 5,
                            Birthday = new DateTime(1972, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Paula Hawkins"
                        });
                });

            modelBuilder.Entity("Bookstore.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<DateTime>("Published");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CategoryId = 1,
                            Name = "Harry Potter and the Sorcerer's Stone",
                            Published = new DateTime(1997, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            CategoryId = 1,
                            Name = "Harry Potter and the Chamber of Secrets",
                            Published = new DateTime(1998, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            CategoryId = 1,
                            Name = "Harry Potter and the Prisoner of Azkaban",
                            Published = new DateTime(1999, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            CategoryId = 1,
                            Name = "The Hobbit",
                            Published = new DateTime(1937, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 2,
                            CategoryId = 1,
                            Name = "The Silmarillion",
                            Published = new DateTime(1977, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            CategoryId = 2,
                            Name = "Me before you",
                            Published = new DateTime(2012, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 3,
                            CategoryId = 2,
                            Name = "Me after you",
                            Published = new DateTime(2014, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 4,
                            CategoryId = 3,
                            Name = "IT",
                            Published = new DateTime(1986, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 5,
                            CategoryId = 4,
                            Name = "The Girl on the Train",
                            Published = new DateTime(2015, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Bookstore.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ciencia Ficcion"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Romance"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Terror"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mystery"
                        });
                });

            modelBuilder.Entity("Bookstore.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("Created");

                    b.Property<int>("Qualification");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            Comment = "Amazing Book! Recommended to all ages.",
                            Created = new DateTime(2018, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Qualification = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 2,
                            Comment = "Nothing compare to the first one. The author lost imagination.",
                            Created = new DateTime(2019, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Qualification = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            BookId = 3,
                            Comment = "All the mistery related to Sirius and how betrayed Harry's parent was brilliant.",
                            Created = new DateTime(2018, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Qualification = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            BookId = 8,
                            Comment = "I hate clowns.",
                            Created = new DateTime(2019, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Qualification = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            BookId = 8,
                            Comment = "I'm not clown's fan, but this had a good narrative.",
                            Created = new DateTime(2019, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Qualification = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 6,
                            BookId = 8,
                            Comment = "Meh!.",
                            Created = new DateTime(2019, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Qualification = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            BookId = 6,
                            Comment = "I love it!.",
                            Created = new DateTime(2018, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Qualification = 5,
                            UserId = 4
                        },
                        new
                        {
                            Id = 8,
                            BookId = 6,
                            Comment = "Boring.",
                            Created = new DateTime(2018, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Qualification = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 9,
                            BookId = 9,
                            Comment = "Master piece.",
                            Created = new DateTime(2015, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Qualification = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            BookId = 9,
                            Comment = "I'm the best World's detective and I could imagine the end. Awesome book.",
                            Created = new DateTime(2015, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Qualification = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 11,
                            BookId = 9,
                            Comment = "This was the best book I read!.",
                            Created = new DateTime(2015, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Qualification = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 12,
                            BookId = 9,
                            Comment = "OMG, the twist! I had another perspective about what was going on!",
                            Created = new DateTime(2016, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Qualification = 5,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("Bookstore.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthday");

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthday = new DateTime(1988, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAdmin = true,
                            Name = "Omar Rodriguez",
                            Password = "1234",
                            Username = "omjrt88"
                        },
                        new
                        {
                            Id = 2,
                            Birthday = new DateTime(1983, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAdmin = false,
                            Name = "Bruce Wayne",
                            Password = "1234",
                            Username = "batman"
                        },
                        new
                        {
                            Id = 3,
                            Birthday = new DateTime(2000, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAdmin = false,
                            Name = "Naruto Uzumaki",
                            Password = "1234",
                            Username = "kyubi"
                        },
                        new
                        {
                            Id = 4,
                            Birthday = new DateTime(1920, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsAdmin = false,
                            Name = "Diane Prince",
                            Password = "1234",
                            Username = "wwoman"
                        });
                });

            modelBuilder.Entity("Bookstore.Models.Book", b =>
                {
                    b.HasOne("Bookstore.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bookstore.Models.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Bookstore.Models.Review", b =>
                {
                    b.HasOne("Bookstore.Models.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Bookstore.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
